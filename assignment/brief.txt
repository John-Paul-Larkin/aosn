













Create batch scripts (or for Mac and Linux users the shell equivalent). A file for backing up a directory and logging the changes. You will need to do your own research online for commands not mentioned in class, in particular, you may need to investigate: 
    • Loop control (for)
    • How to check for file and directories existence
    • Date manipulation
    • File comparison
 
Include a comment at the top of each script with your name and student ID.
Create a folder called assignment.

You can create a single script or multiple scripts to achieve the objective, but the main script should be called “backup.bat” if using batch, and backup.sh if using bash, tcsh, dash, or other shells. 


All the scripts need to be located Inside the assignment. 
The main script is supposed to be launched from the current directory (i.e. ./backup.sh).
In the description of the algorithm below, we enclose between ‘<’ and’>’ variable parts, i/e.:
    • <date>: here we expect the date as provided by the OS to the script, for this date no particular formatting is expected.
    • <time>: here we expect the time as provided by the OS to the script, for this time no particular formatting is expected.
    • <YYYYMMDD>: name of the output folder for the snapshot as generated by the script.
    • <absolute path>: absolute current path for the local folder.

An example of log, and filesystem containing all the above, is illustrated below the algorithm instructions

Before running the script, you will create folder, named input, having at least four files in it.
 When backup script runs 

    1. As soon as the script starts appends the following line to the backup.log file present in the current directory, creating it if it does not exist:
        a. <date> <time> Script started.

        b. <date> <time> working dir <absolute path of the current directory> where the absolute path is determined by the script.
    2. Now the script creates a new folder called YYYYMMDD (where YYYY is the current year, MM the current month, and DD the current date, ex 20243001 for 30/01/2024) in the same directory IF AND ONLY IF this folder does not already exist.
        a. The folder name is not hard-coded (in other words the script should fetch the current date from the system and create the folder with the current date as name).
        b. IF the output folder has been created (i.e. did not exist already):
            i. The script appends to the backup.log file the following line:
                1. <date> <time> created folder <YYYYMMDD>
        c. OTHERWISE (i.e. the folder existed when the script was launched):
            i. The script appends to the backup.log file the following line:
                1. <date> <time> using previously created folder <YYYYMMDD>
    3. Copy the files from the input folder to the new folder only if they are not already there.
        a. In this case the script appends to the backup.log file the following line:
            i. 1 <date> <time> Added file <filename> to folder <YYYYMMDD>



    4. If a file is already present in <YYYYMMDD> then:
        a. Compare files
            i. IF THE FILES ARE THE SAME
                1. The script just appends the following line to the backup.log file:
                    a. <date> <time> <filename> ignored (already in <YYYYMMDD>
            ii. IF THEY ARE DIFFERENT
                1. The script overwrites the file in the destination folder and writes on the log:
                    a. <date><time> <filename> changed… overwritten in <YYYYMMDD> 

                    
    5. The script adds the following line to the backup.log file:
        a. <date> <time> Job done.
    6. The script terminates.

Example of backup.log:
2024-01-02 18:54:08 script started
2024-01-02 18:54:08 working dir /Users/patrizio/Documents/assignment
2024-01-02 18:54:08 created folder 20240102
2024-01-02 18:54:08 added test1.log to 20240102
2024-01-02 18:54:08 added test2.log to 20240102
2024-01-02 18:54:08 added test3.log to 20240102
2024-01-02 18:54:08 End Of job
2024-01-02 18:54:28 script started
2024-01-02 18:55:05 working dir /Users/patrizio/Documents/assignment
2024-01-02 18:54:28 using previously created folder 20240102
2024-01-02 18:54:28 test1.log ignored (already in 20240102)
2024-01-02 18:54:28 test2.log ignored (already in 20240102)
2024-01-02 18:54:28 test3.log ignored (already in 20240102)
2024-01-02 18:54:28 added test4.log to 20240102
2024-01-02 18:54:28 End Of job
2024-01-02 18:55:05 script started
2024-01-02 18:55:05 working dir /Users/patrizio/Documents/assignment
2024-01-02 18:55:05 using previously created folder 20240102
2024-01-02 18:55:05 test1.log changed... overwritten in 20240102
2024-01-02 18:55:05 test2.log ignored (already in 20240102)
2024-01-02 18:55:05 test3.log ignored (already in 20240102)
2024-01-02 18:55:06 test4.log ignored (already in 20240102)
2024-01-02 18:55:06 End Of job

Create a README.txt that 
    7. gives instructions on how to run the script
    8. explains the purpose of the script. 
    9. Includes instructions on how you can automate the script to run automatically when the PC is turned on.
    10. Comment each line in your script on what its purpose is.
Use echo statements to test the flow of your scripts, you can leave the echo statements in at the end.
 
Example of assignment folder:


